---
title: "Predicting Hospital LOS" 
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
library("tidyverse")
library(janitor)
library(skimr)
library(ggplot2)
library(lubridate)
library(caret)
```

You can add options to executable code like this

```{r}

Hs_data <- read.csv(file = "~/Masters/Predicting-Hospital-LOS/Hospital_Inpatient_Discharges__SPARCS_De-Identified___2012_20250520.csv")
```

```{r}
skim(Hs_data) 
```

```{r}
# doing a quick check on the values

Hs_data |>
 select(Length.of.Stay) |>
  distinct() |>
  arrange(Length.of.Stay)
```

```{r}
# remove the 120 + and convert
Hs_data <- Hs_data |>
  mutate(
    
    Length.of.Stay = as.numeric(str_remove(Length.of.Stay, "\\+"))
  )
```

```{r}
# Skim showed 89 empty in these columns
Hs_data |> 
   filter(
    APR.Severity.of.Illness.Description == "" |
    APR.Risk.of.Mortality == ""
  )
```

### Covert Data Types

```{r}

# convert the LOS  char -> dbl
Hs_data <-
  Hs_data |>
  mutate(
    Length.of.Stay = as.numeric(Length.of.Stay)
   )

  
```

```{r}
# Convert the Categorical data to a Factor
Hs_data <- Hs_data |>
  mutate(
    across(
      c(Age.Group, Gender, Race, Ethnicity, Type.of.Admission,
        Emergency.Department.Indicator, Patient.Disposition,
        APR.Severity.of.Illness.Description, APR.Risk.of.Mortality,
        APR.Medical.Surgical.Description, APR.DRG.Description,
        CCS.Diagnosis.Description, Facility.Name, Hospital.County,
        Payment.Typology.1),
    
        as.factor
      )
    )

```


```{r}
Hs_data <- 
  Hs_data |>
  mutate(
     LOS_Group = case_when(
      between(Length.of.Stay, 0, 2)    ~ "Very Short (0 - 2)",
      between(Length.of.Stay, 3, 5)    ~ "Short Stay (3 - 5)",
      between(Length.of.Stay, 6, 10)   ~ "Moderate Stay (6 - 10)",
      between(Length.of.Stay, 11, 30)  ~ "Long Stay (11 - 30)",
      between(Length.of.Stay, 31, 119) ~ "Long Term Stay (31 - 119)",
      Length.of.Stay >= 120            ~ "120 or more days"
    )
  )

```

```{r}
Hs_data <- 
  Hs_data |> mutate(LOS_Group = factor(LOS_Group, levels = c(
    "Very Short (0 - 2)",
    "Short Stay (3 - 5)",
    "Moderate Stay (6 - 10)",
    "Long Stay (11 - 30)",
    "Long Term Stay (31 - 119)",
    "120 or more days"
  )))
```

# Graphs and Analysis

```{r}
    ggplot(Hs_data, aes(x = LOS_Group)) +
  geom_bar(fill = "steelblue") +
  labs(title = "Distribution of Length of Stay Groups",
       x = "Length of Stay Group",
       y = "Number of Patients") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

```{r}
ggplot(Hs_data, aes(x = Length.of.Stay)) +
  geom_histogram(bins = 50, fill = "steelblue") +
  coord_cartesian(xlim = c(0, 30)) +
  labs(title = "Length of Stay Distribution")
```

```{r}

ggplot(Hs_data, aes(x = LOS_Group, fill = Gender)) +
  geom_bar(position = "fill") +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "LOS Group Breakdown by Gender")+
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

```{r}

ggplot(Hs_data, aes(x = Age.Group, fill = LOS_Group)) +
  geom_bar(position = "fill") +
  scale_y_continuous(labels = scales::percent) +
  labs(
    title = "Proportion of LOS Groups by Age Group",
    x = "Age Group",
    y = "Percentage"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

```{r}
ggplot(Hs_data, aes(x = Length.of.Stay)) +
  geom_histogram(bins = 50, fill = "steelblue") +
  coord_cartesian(xlim = c(0, 30)) +
  labs(title = "Length of Stay Distribution")
```

```{r}

Hs_data |>
  group_by(Age.Group) |>
  summarise(
    groupCount = n()
  )

```

```{r}

Hs_data |>
  select(Type.of.Admission, LOS_Group, Length.of.Stay) |>
   group_by(Type.of.Admission) |>
  summarise(
    count = n(),
    average_Stay = round(mean(Length.of.Stay, na.rm = TRUE),2),
    median_Stay = median(Length.of.Stay)
  )  |>
  mutate(
    proportion_Of_Stay = round(count / sum(count), 3) * 100
  ) |>
  arrange(desc(average_Stay))
```

```{r}

Hs_data |>
  select(Race, LOS_Group, Length.of.Stay) |>
   group_by(Race) |>
  summarise(
    count = n(),
    average_Stay = round(mean(Length.of.Stay, na.rm = TRUE),2),
    median_Stay = median(Length.of.Stay)
  )  |>
  mutate(
    proportion_Of_Stay = round(count / sum(count), 3) * 100
  ) |>
  arrange(desc(average_Stay))
```

```{r}
Hs_data |>
  select(Gender, LOS_Group, Length.of.Stay) |>
   group_by(Gender) |>
  summarise(
    count = n(),
    average_Stay = round(mean(Length.of.Stay, na.rm = TRUE),2),
    median_Stay = median(Length.of.Stay)
  )  |>
  mutate(
    proportion_Of_Stay = round(count / sum(count), 3) * 100
  ) |>
  arrange(desc(average_Stay))
```

```{r}

Hs_data |>
  select(Patient.Disposition, LOS_Group, Length.of.Stay) |>
   group_by(Patient.Disposition) |>
  summarise(
    count = n(),
    average_Stay = round(mean(Length.of.Stay, na.rm = TRUE),2),
    median_Stay = median(Length.of.Stay)
  )  |>
  mutate(
    proportion_Of_Stay = round(count / sum(count), 3) * 100
  ) |>
  arrange(desc(average_Stay))
```
